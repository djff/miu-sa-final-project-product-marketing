# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Product Affiliate CI/CD Pipeline

# on:
#   pull_request:
#     branches: [master]
on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        # distribution: 'adopt'
        # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: ${{ github.workspace }} # location for the settings.xml file

#    - name: Build and Pushing registry service
#      run: mvn package -DskipTests dockerfile:push --file registry-service/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#     - name: Build and Pushing gateway service
#       run: mvn package -DskipTests dockerfile:push --file gateway-service/pom.xml
#       env:
#           MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Pushing bank service
#      run: mvn package -DskipTests dockerfile:push --file BankService/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Pushing card service
#      run: mvn package -DskipTests dockerfile:push --file CardService/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#     - name: Build and Pushing account service
#       run: mvn package -DskipTests dockerfile:push --file account-service/pom.xml
#       env:
#           MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Pushing affiliate service
      run: mvn package -DskipTests dockerfile:push --file affiliate-service/pom.xml
      env:
         MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
         MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Pushing auth service
#      run: mvn package -DskipTests dockerfile:push --file auth-service/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#     - name: Build and Pushing notification service
#       run: mvn package -DskipTests dockerfile:push --file notification-service/pom.xml
#       env:
#           MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and Pushing order service
#       run: mvn package -DskipTests dockerfile:push --file order-service/pom.xml
#       env:
#           MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#     - name: Build and Pushing payment service
#       run: mvn package -DskipTests dockerfile:push --file payment-service/pom.xml
#       env:
#            MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#            MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Build and Pushing Product service
#      run: mvn package -DskipTests dockerfile:push --file product-service/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#     - name: Build and Pushing shipping service
#       run: mvn package -DskipTests dockerfile:push --file shipping\ service/pom.xml
#       env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: delete -f k8s/

